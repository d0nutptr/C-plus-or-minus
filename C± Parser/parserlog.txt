program
	import_statement
		import
		string_literal
		semi_colon
	function_statement
		assignment_statement
			variable_declaration
				type
					primitive_type
						int_type
				id
			assignment_operator
			value
				primitive_literal
					int_literal
		semi_colon
	function_statement
		assignment_statement
			variable_declaration
				type
					primitive_type
						boolean_type
				id
			assignment_operator
			value
				primitive_literal
					boolean_literal
		semi_colon
	function_statement
		assignment_statement
			variable_declaration
				type
					primitive_type
						char_type
				id
			assignment_operator
			value
				primitive_literal
					char_literal
		semi_colon
	function_statement
		assignment_statement
			variable_declaration
				type
					primitive_type
						double_type
				id
			assignment_operator
			value
				primitive_literal
					double_literal
		semi_colon
	function_statement
		assignment_statement
			variable_declaration
				type
					id
				id
			assignment_operator
			value
				primitive_literal
					string_literal
		semi_colon
	function_statement
		assignment_statement
			variable_declaration
				type
					id
				id
			assignment_operator
			value
				null
		semi_colon
	function_statement
		assignment_statement
			variable_declaration
				type
					id
				id
			assignment_operator
			value
				expression
					value
						expression
							function_call
								id
								open_paran
								close_paran
					binary_operator
						.
					value
						expression
							function_call
								id
								open_paran
								close_paran
		semi_colon
	function_statement
		expression
			function_call
				id
				open_paran
				param_list
					param
						value
							id
				close_paran
		semi_colon
	function_statement
		conditional
			if
			open_paran
			value
				expression
					value
						expression
							function_call
								id
								open_paran
								close_paran
					binary_operator
						!=
					value
						null
			close_paran
			open_brace
			function_statements
				function_statement
					assignment_statement
						variable_declaration
							type
								primitive_type
									boolean_type
							id
						assignment_operator
						value
							expression
								value
									expression
										function_call
											id
											open_paran
											close_paran
								binary_operator
									instanceof
								value
									id
					semi_colon
			close_brace
	class_statement
		function_definition
			function
			type
				id
			id
			open_paran
			close_paran
			open_brace
			function_statements
				function_statement
					conditional
						if
						open_paran
						value
							expression
								id
								binary_operator
									==
								value
									null
						close_paran
						open_brace
						function_statements
							function_statement
								assignment_statement
									id
									assignment_operator
									value
										expression
											instantiation
												new
												id
												open_paran
												param_list
													param
														value
															primitive_literal
																boolean_literal
												close_paran
								semi_colon
						close_brace
				function_statement
					return_statement
						return
						value
							id
					semi_colon
			close_brace
	class_definition
		class
		id
		class_block
			open_brace
			class_statements
				class_statement_or_constructor
					class_statement
						variable_declaration
							type
								primitive_type
									boolean_type
							id
						semi_colon
				class_statement_or_constructor
					constructor
						id
						open_paran
						parameter_definition_list
							parameter_definition
								type
									primitive_type
										boolean_type
								id
						close_paran
						open_brace
						function_statements
							function_statement
								assignment_statement
									id
									assignment_operator
									value
										id
								semi_colon
						close_brace
				class_statement_or_constructor
					class_statement
						function_definition
							function
							type
								primitive_type
									char_type
							id
							open_paran
							close_paran
							open_brace
							function_statements
								function_statement
									return_statement
										return
										value
											primitive_literal
												char_literal
									semi_colon
							close_brace
			close_brace
	class_definition
		class
		id
		colon
		id
		class_block
			open_brace
			class_statements
				class_statement_or_constructor
					constructor
						id
						open_paran
						parameter_definition_list
							parameter_definition
								type
									primitive_type
										boolean_type
								id
						close_paran
						open_brace
						function_statements
							function_statement
								constructor_call
									super
									open_paran
									param_list
										param
											value
												id
									close_paran
								semi_colon
						close_brace
				class_statement_or_constructor
					class_statement
						function_definition
							function
							type
								array_type
									type
										primitive_type
											char_type
									open_bracket
									close_bracket
							id
							open_paran
							close_paran
							open_brace
							function_statements
								function_statement
									assignment_statement
										variable_declaration
											type
												array_type
													type
														primitive_type
															char_type
													open_bracket
													close_bracket
											id
										assignment_operator
										value
											expression
												instantiation
													new
													array_type
														type
															primitive_type
																char_type
														open_bracket
														value
															primitive_literal
																int_literal
														close_bracket
									semi_colon
								function_statement
									assignment_statement
										value
											expression
												id
												postunary_operator
													open_bracket
													value
														primitive_literal
															int_literal
													close_bracket
										assignment_operator
										value
											expression
												function_call
													id
													open_paran
													close_paran
									semi_colon
								function_statement
									assignment_statement
										value
											expression
												id
												postunary_operator
													open_bracket
													value
														primitive_literal
															int_literal
													close_bracket
										assignment_operator
										value
											expression
												function_call
													id
													open_paran
													close_paran
									semi_colon
								function_statement
									return_statement
										return
										value
											id
									semi_colon
							close_brace
				class_statement_or_constructor
					class_statement
						function_definition
							function
							type
								primitive_type
									void_type
							id
							open_paran
							parameter_definition_list
								parameter_definition
									type
										primitive_type
											int_type
									id
								comma
								parameter_definition
									type
										primitive_type
											boolean_type
									id
							close_paran
							open_brace
							function_statements
								function_statement
									return_statement
										return
									semi_colon
							close_brace
				class_statement_or_constructor
					class_statement
						function_definition
							function
							type
								id
							id
							open_paran
							close_paran
							open_brace
							function_statements
								function_statement
									return_statement
										return
										value
											primitive_literal
												string_literal
									semi_colon
							close_brace
				class_statement_or_constructor
					class_statement
						function_definition
							function
							type
								primitive_type
									int_type
							id
							open_paran
							close_paran
							open_brace
							function_statements
								function_statement
									loop
										for_loop
											for
											open_paran
											variable_declaration
												type
													id
												id
											in
											value
												id
											close_paran
											open_brace
											function_statements
												function_statement
													expression
														function_call
															id
															open_paran
															param_list
																param
																	value
																		id
															close_paran
													semi_colon
											close_brace
							close_brace
				class_statement_or_constructor
					class_statement
						function_definition
							function
							type
								primitive_type
									int_type
							id
							open_paran
							close_paran
							open_brace
							function_statements
								function_statement
									assignment_statement
										variable_declaration
											type
												primitive_type
													int_type
											id
										assignment_operator
										value
											primitive_literal
												int_literal
									semi_colon
								function_statement
									conditional
										if
										open_paran
										value
											expression
												id
												binary_operator
													instanceof
												value
													id
										close_paran
										open_brace
										function_statements
											function_statement
												loop
													for_loop
														for
														open_paran
														assignment_statement
															variable_declaration
																type
																	primitive_type
																		int_type
																id
															assignment_operator
															value
																primitive_literal
																	int_literal
														semi_colon
														value
															expression
																id
																binary_operator
																	<
																value
																	primitive_literal
																		int_literal
														semi_colon
														expression
															id
															postunary_operator
																++
														close_paran
														open_brace
														function_statements
															function_statement
																assignment_statement
																	id
																	assignment_operator
																	value
																		expression
																			id
																			binary_operator
																				+
																			value
																				id
																semi_colon
														close_brace
										close_brace
								function_statement
									return_statement
										return
										value
											id
									semi_colon
							close_brace
			close_brace
	class_definition
		class
		partial
		id
		class_block
			open_brace
			class_statements
				class_statement_or_constructor
					class_statement
						function_definition
							function
							type
								id
							id
							open_paran
							close_paran
							open_brace
							function_statements
								function_statement
									return_statement
										return
										value
											primitive_literal
												string_literal
									semi_colon
							close_brace
			close_brace
